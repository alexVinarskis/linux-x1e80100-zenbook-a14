From 3c179dcc1bae60d1d66ef199f81bdac2084c2561 Mon Sep 17 00:00:00 2001
From: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>
Date: Wed, 14 May 2025 22:04:28 +0200
Subject: [PATCH 1/3] media: i2c: ov02c10: support 'rotation' parameter

Particular sensor suppports mirroring and flipping the image. Port
original Intel's solution for rotating the video output basedd on
'rotation' paramater.

Signed-off-by: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>
---
 drivers/media/i2c/ov02c10.c | 59 +++++++++++++++++++++++++++++++++++++
 1 file changed, 59 insertions(+)

diff --git a/drivers/media/i2c/ov02c10.c b/drivers/media/i2c/ov02c10.c
index 45214ea56a4d..5f233bce3164 100644
--- a/drivers/media/i2c/ov02c10.c
+++ b/drivers/media/i2c/ov02c10.c
@@ -388,6 +388,7 @@ struct ov02c10 {
 	struct clk *img_clk;
 	struct gpio_desc *reset;
 	struct regulator_bulk_data supplies[ARRAY_SIZE(ov02c10_supply_names)];
+	bool upside_down;
 
 	/* MIPI lane info */
 	u32 link_freq_index;
@@ -546,6 +547,9 @@ static int ov02c10_init_controls(struct ov02c10 *ov02c10)
 	if (ret)
 		return ret;
 
+	if (props.rotation == 180)
+		ov02c10->upside_down = true;
+
 	v4l2_ctrl_new_fwnode_properties(ctrl_hdlr, &ov02c10_ctrl_ops, &props);
 
 	if (ctrl_hdlr->error)
@@ -595,6 +599,7 @@ static int ov02c10_enable_streams(struct v4l2_subdev *sd,
 	struct ov02c10 *ov02c10 = to_ov02c10(sd);
 	const struct reg_sequence *reg_sequence;
 	int ret, sequence_length;
+	u64 rotate, shift_x, shift_y;
 
 	ret = pm_runtime_resume_and_get(&client->dev);
 	if (ret)
@@ -628,6 +633,60 @@ dev_info(&client->dev, "%s %d ok\n", __func__, __LINE__);
 	if (ret)
 		goto out;
 
+	if (ov02c10->upside_down) {
+		ret = cci_read(ov02c10->regmap, OV02C10_ROTATE_CONTROL,
+			       &rotate, NULL);
+		if (ret) {
+			dev_err(&client->dev,
+				"read ROTATE_CONTROL fail: %d", ret);
+			goto out;
+		}
+
+		ret = cci_read(ov02c10->regmap, OV02C10_ISP_X_WIN_CONTROL,
+			       &shift_x, NULL);
+		if (ret) {
+			dev_err(&client->dev,
+				"read ISP_X_WIN_CONTROL fail: %d", ret);
+			goto out;
+		}
+
+		ret = cci_read(ov02c10->regmap, OV02C10_ISP_Y_WIN_CONTROL,
+			       &shift_y, NULL);
+		if (ret) {
+			dev_err(&client->dev,
+				"read ISP_Y_WIN_CONTROL fail: %d", ret);
+			goto out;
+		}
+
+		rotate ^= OV02C10_CONFIG_ROTATE;
+		shift_x = shift_x - 1;
+		shift_y = shift_y - 1;
+
+		ret = cci_write(ov02c10->regmap, OV02C10_ROTATE_CONTROL,
+				rotate, NULL);
+		if (ret) {
+			dev_err(&client->dev,
+				"write ROTATE_CONTROL fail: %d", ret);
+			goto out;
+		}
+
+		ret = cci_write(ov02c10->regmap, OV02C10_ISP_X_WIN_CONTROL,
+				shift_x, NULL);
+		if (ret) {
+			dev_err(&client->dev,
+				"write ISP_X_WIN_CONTROL fail: %d", ret);
+			goto out;
+		}
+
+		ret = cci_write(ov02c10->regmap, OV02C10_ISP_Y_WIN_CONTROL,
+				shift_y, NULL);
+		if (ret) {
+			dev_err(&client->dev,
+				"write ISP_Y_WIN_CONTROL fail: %d", ret);
+			goto out;
+		}
+	}
+
 dev_info(&client->dev, "%s %d ok\n", __func__, __LINE__);
 	ret = cci_write(ov02c10->regmap, OV02C10_REG_STREAM_CONTROL, 1, NULL);
 out:
-- 
2.45.2

